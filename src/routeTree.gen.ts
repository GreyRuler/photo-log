/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LogoutImport } from './routes/logout'
import { Route as LoginImport } from './routes/login'
import { Route as IndexImport } from './routes/index'
import { Route as AdministrationIndexImport } from './routes/administration/index'
import { Route as DetailsIdImport } from './routes/details.$id'
import { Route as AdministrationUsersImport } from './routes/administration/users'
import { Route as AdministrationPhotosImport } from './routes/administration/photos'
import { Route as AdministrationFavoritesImport } from './routes/administration/favorites'

// Create/Update Routes

const LogoutRoute = LogoutImport.update({
  path: '/logout',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AdministrationIndexRoute = AdministrationIndexImport.update({
  path: '/administration/',
  getParentRoute: () => rootRoute,
} as any)

const DetailsIdRoute = DetailsIdImport.update({
  path: '/details/$id',
  getParentRoute: () => rootRoute,
} as any)

const AdministrationUsersRoute = AdministrationUsersImport.update({
  path: '/administration/users',
  getParentRoute: () => rootRoute,
} as any)

const AdministrationPhotosRoute = AdministrationPhotosImport.update({
  path: '/administration/photos',
  getParentRoute: () => rootRoute,
} as any)

const AdministrationFavoritesRoute = AdministrationFavoritesImport.update({
  path: '/administration/favorites',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/logout': {
      id: '/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof LogoutImport
      parentRoute: typeof rootRoute
    }
    '/administration/favorites': {
      id: '/administration/favorites'
      path: '/administration/favorites'
      fullPath: '/administration/favorites'
      preLoaderRoute: typeof AdministrationFavoritesImport
      parentRoute: typeof rootRoute
    }
    '/administration/photos': {
      id: '/administration/photos'
      path: '/administration/photos'
      fullPath: '/administration/photos'
      preLoaderRoute: typeof AdministrationPhotosImport
      parentRoute: typeof rootRoute
    }
    '/administration/users': {
      id: '/administration/users'
      path: '/administration/users'
      fullPath: '/administration/users'
      preLoaderRoute: typeof AdministrationUsersImport
      parentRoute: typeof rootRoute
    }
    '/details/$id': {
      id: '/details/$id'
      path: '/details/$id'
      fullPath: '/details/$id'
      preLoaderRoute: typeof DetailsIdImport
      parentRoute: typeof rootRoute
    }
    '/administration/': {
      id: '/administration/'
      path: '/administration'
      fullPath: '/administration'
      preLoaderRoute: typeof AdministrationIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  LoginRoute,
  LogoutRoute,
  AdministrationFavoritesRoute,
  AdministrationPhotosRoute,
  AdministrationUsersRoute,
  DetailsIdRoute,
  AdministrationIndexRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/logout",
        "/administration/favorites",
        "/administration/photos",
        "/administration/users",
        "/details/$id",
        "/administration/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/logout": {
      "filePath": "logout.tsx"
    },
    "/administration/favorites": {
      "filePath": "administration/favorites.tsx"
    },
    "/administration/photos": {
      "filePath": "administration/photos.tsx"
    },
    "/administration/users": {
      "filePath": "administration/users.tsx"
    },
    "/details/$id": {
      "filePath": "details.$id.tsx"
    },
    "/administration/": {
      "filePath": "administration/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
