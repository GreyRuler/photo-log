/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LogoutImport } from './routes/logout'
import { Route as LoginImport } from './routes/login'
import { Route as FavoritesImport } from './routes/favorites'
import { Route as IndexImport } from './routes/index'
import { Route as PhotosIndexImport } from './routes/photos/index'
import { Route as AdministrationIndexImport } from './routes/administration/index'
import { Route as PhotosUploadImport } from './routes/photos/upload'
import { Route as DetailsIdImport } from './routes/details.$id'
import { Route as AdministrationTableImport } from './routes/administration/table'
import { Route as AdministrationPhotosImport } from './routes/administration/photos'
import { Route as AdministrationFavoritesImport } from './routes/administration/favorites'
import { Route as AdministrationUsersIndexImport } from './routes/administration/users/index'
import { Route as AdministrationUsersCreateImport } from './routes/administration/users/create'
import { Route as AdministrationUsersIdUpdateImport } from './routes/administration/users/$id.update'
import { Route as AdministrationUsersIdDeleteImport } from './routes/administration/users/$id.delete'

// Create/Update Routes

const LogoutRoute = LogoutImport.update({
  path: '/logout',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const FavoritesRoute = FavoritesImport.update({
  path: '/favorites',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PhotosIndexRoute = PhotosIndexImport.update({
  path: '/photos/',
  getParentRoute: () => rootRoute,
} as any)

const AdministrationIndexRoute = AdministrationIndexImport.update({
  path: '/administration/',
  getParentRoute: () => rootRoute,
} as any)

const PhotosUploadRoute = PhotosUploadImport.update({
  path: '/photos/upload',
  getParentRoute: () => rootRoute,
} as any)

const DetailsIdRoute = DetailsIdImport.update({
  path: '/details/$id',
  getParentRoute: () => rootRoute,
} as any)

const AdministrationTableRoute = AdministrationTableImport.update({
  path: '/administration/table',
  getParentRoute: () => rootRoute,
} as any)

const AdministrationPhotosRoute = AdministrationPhotosImport.update({
  path: '/administration/photos',
  getParentRoute: () => rootRoute,
} as any)

const AdministrationFavoritesRoute = AdministrationFavoritesImport.update({
  path: '/administration/favorites',
  getParentRoute: () => rootRoute,
} as any)

const AdministrationUsersIndexRoute = AdministrationUsersIndexImport.update({
  path: '/administration/users/',
  getParentRoute: () => rootRoute,
} as any)

const AdministrationUsersCreateRoute = AdministrationUsersCreateImport.update({
  path: '/administration/users/create',
  getParentRoute: () => rootRoute,
} as any)

const AdministrationUsersIdUpdateRoute =
  AdministrationUsersIdUpdateImport.update({
    path: '/administration/users/$id/update',
    getParentRoute: () => rootRoute,
  } as any)

const AdministrationUsersIdDeleteRoute =
  AdministrationUsersIdDeleteImport.update({
    path: '/administration/users/$id/delete',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/favorites': {
      id: '/favorites'
      path: '/favorites'
      fullPath: '/favorites'
      preLoaderRoute: typeof FavoritesImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/logout': {
      id: '/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof LogoutImport
      parentRoute: typeof rootRoute
    }
    '/administration/favorites': {
      id: '/administration/favorites'
      path: '/administration/favorites'
      fullPath: '/administration/favorites'
      preLoaderRoute: typeof AdministrationFavoritesImport
      parentRoute: typeof rootRoute
    }
    '/administration/photos': {
      id: '/administration/photos'
      path: '/administration/photos'
      fullPath: '/administration/photos'
      preLoaderRoute: typeof AdministrationPhotosImport
      parentRoute: typeof rootRoute
    }
    '/administration/table': {
      id: '/administration/table'
      path: '/administration/table'
      fullPath: '/administration/table'
      preLoaderRoute: typeof AdministrationTableImport
      parentRoute: typeof rootRoute
    }
    '/details/$id': {
      id: '/details/$id'
      path: '/details/$id'
      fullPath: '/details/$id'
      preLoaderRoute: typeof DetailsIdImport
      parentRoute: typeof rootRoute
    }
    '/photos/upload': {
      id: '/photos/upload'
      path: '/photos/upload'
      fullPath: '/photos/upload'
      preLoaderRoute: typeof PhotosUploadImport
      parentRoute: typeof rootRoute
    }
    '/administration/': {
      id: '/administration/'
      path: '/administration'
      fullPath: '/administration'
      preLoaderRoute: typeof AdministrationIndexImport
      parentRoute: typeof rootRoute
    }
    '/photos/': {
      id: '/photos/'
      path: '/photos'
      fullPath: '/photos'
      preLoaderRoute: typeof PhotosIndexImport
      parentRoute: typeof rootRoute
    }
    '/administration/users/create': {
      id: '/administration/users/create'
      path: '/administration/users/create'
      fullPath: '/administration/users/create'
      preLoaderRoute: typeof AdministrationUsersCreateImport
      parentRoute: typeof rootRoute
    }
    '/administration/users/': {
      id: '/administration/users/'
      path: '/administration/users'
      fullPath: '/administration/users'
      preLoaderRoute: typeof AdministrationUsersIndexImport
      parentRoute: typeof rootRoute
    }
    '/administration/users/$id/delete': {
      id: '/administration/users/$id/delete'
      path: '/administration/users/$id/delete'
      fullPath: '/administration/users/$id/delete'
      preLoaderRoute: typeof AdministrationUsersIdDeleteImport
      parentRoute: typeof rootRoute
    }
    '/administration/users/$id/update': {
      id: '/administration/users/$id/update'
      path: '/administration/users/$id/update'
      fullPath: '/administration/users/$id/update'
      preLoaderRoute: typeof AdministrationUsersIdUpdateImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  FavoritesRoute,
  LoginRoute,
  LogoutRoute,
  AdministrationFavoritesRoute,
  AdministrationPhotosRoute,
  AdministrationTableRoute,
  DetailsIdRoute,
  PhotosUploadRoute,
  AdministrationIndexRoute,
  PhotosIndexRoute,
  AdministrationUsersCreateRoute,
  AdministrationUsersIndexRoute,
  AdministrationUsersIdDeleteRoute,
  AdministrationUsersIdUpdateRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/favorites",
        "/login",
        "/logout",
        "/administration/favorites",
        "/administration/photos",
        "/administration/table",
        "/details/$id",
        "/photos/upload",
        "/administration/",
        "/photos/",
        "/administration/users/create",
        "/administration/users/",
        "/administration/users/$id/delete",
        "/administration/users/$id/update"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/favorites": {
      "filePath": "favorites.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/logout": {
      "filePath": "logout.tsx"
    },
    "/administration/favorites": {
      "filePath": "administration/favorites.tsx"
    },
    "/administration/photos": {
      "filePath": "administration/photos.tsx"
    },
    "/administration/table": {
      "filePath": "administration/table.tsx"
    },
    "/details/$id": {
      "filePath": "details.$id.tsx"
    },
    "/photos/upload": {
      "filePath": "photos/upload.tsx"
    },
    "/administration/": {
      "filePath": "administration/index.tsx"
    },
    "/photos/": {
      "filePath": "photos/index.tsx"
    },
    "/administration/users/create": {
      "filePath": "administration/users/create.tsx"
    },
    "/administration/users/": {
      "filePath": "administration/users/index.tsx"
    },
    "/administration/users/$id/delete": {
      "filePath": "administration/users/$id.delete.tsx"
    },
    "/administration/users/$id/update": {
      "filePath": "administration/users/$id.update.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
